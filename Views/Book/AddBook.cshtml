@using BeamX_Task.ViewModels;
@model BookVM
@{
    ViewBag.Title = "Add Book";
}
@{
    <h1>Add Book</h1>
    @using(Html.BeginForm("AddBook","Book",FormMethod.Post))
    {
        <div class="form-group">
            @Html.LabelFor(val=>val.Title)
            @Html.TextBoxFor(val=>val.Title)
            @Html.ValidationMessageFor(val=>val.Title)
        </div>
        <div class="form-group">
            @Html.LabelFor(val => val.Description)
            @Html.TextBoxFor(val => val.Description)
            @Html.ValidationMessageFor(val => val.Description)
        </div>


        // <div class="form-group">
        //     @Html.LabelFor(model => model.BookAuthors)
        //     @Html.DropDownList("AuthorId", (List<SelectListItem>)ViewBag.AuthorsList, "Select Author", new { @class = "form-control" })
        //     @Html.ValidationMessageFor(model => model.BookAuthors, "", new { @class = "text-danger" })
        // </div>

        <div class="form-group">
            @Html.Label("Author Name")
            <select name="AuthorId" ,class = "form-control" >
                @foreach (Author author in ViewBag.AuthorsList)
                {
                    <option value=@author.AuthorId>@author.AuthorName</option>
                }
            </select>
        </div>
        <input type="submit" value="Save" class=" btn btn-secondary"><br>
        @Html.ActionLink("Show","ShowBookDetails","Book");<br>
        @Html.ActionLink("Back to Main Page","Index","Author");
    }

    @if (TempData["Message"] != null)
    {
        <script>
            alert("@TempData["Message"]");
        </script>
    }
}
